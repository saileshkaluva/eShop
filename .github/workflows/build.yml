name: eShop Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore ./eShopOnWeb.sln
    - name: Build
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    - name: Test
      run: dotnet test ./eShopOnWeb.sln --configuration Release
      
      #Azure Container Registry Login Module
    
  buildPushAppImage:
    name: Build and Push to ACR
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2


    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USER}}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD}}
        # Container registry server url
        login-server: ${{ secrets.ACR_SERVER}}
    - run: |
        docker build -f src/Web/Dockerfile . -t ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}
        docker push ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}

  deployStaging:
    runs-on: ubuntu-latest
    needs: buildPushAppImage
    environment: staging
    steps:
    - uses: actions/checkout@v2


    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USER}}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD}}
        # Container registry server url
        login-server: ${{ secrets.ACR_SERVER}}
    - name: Azure Login
      uses: Azure/login@v1
      with:
        # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
        creds: ${{ secrets.ACR_CREDENTIALS }}

    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: GitHubWorkShop29694140
        # Enter an existing Slot other than the Production slot
        slot-name: staging
        # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        images: ${{ secrets.ACR_SERVER}}/eshop:${{ github.run_id }}


  deployProduction:
      runs-on: ubuntu-latest
      needs: buildPushAppImage
      environment: production
      steps:
      - uses: actions/checkout@v2


      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          # Container registry username
          username: ${{ secrets.ACR_USER}}
          # Container registry password
          password: ${{ secrets.ACR_PASSWORD}}
          # Container registry server url
          login-server: ${{ secrets.ACR_SERVER}}
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.ACR_CREDENTIALS }}

      - name: Swap staging to production
        run: |
          az webapp deployment slot swap --name GitHubWorkShop29694140 --resource-group GitHubWorkShop29694140 --slot staging --target-slot production
